name: Build OpenRV Windows

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

env:
  QT_VERSION: 5.15.2
  PYTHON_VERSION: "3.10.11"
  CMAKE_VERSION: "3.27.7"

jobs:
  build:
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1.3
      with:
        vs-version: '17.0'
        msbuild-architecture: x64

    - name: Set up Visual Studio environment
      shell: pwsh
      run: |
        # Ensure MSVC v143 14.40 is the default compiler
        $propsPath = "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\Microsoft.VCToolsVersion.v143.default.props"
        $propsContent = Get-Content $propsPath
        $propsContent = $propsContent -replace "(<VCToolsVersion[^>]*>)[^<]*(</VCToolsVersion>)", "`${1}14.40.33807`${2}"
        Set-Content $propsPath $propsContent

    - name: Install Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        architecture: 'x64'

    - name: Copy python3.exe
      shell: pwsh
      run: |
        Copy-Item "C:\hostedtoolcache\windows\Python\${{ env.PYTHON_VERSION }}\x64\python.exe" `
                 "C:\hostedtoolcache\windows\Python\${{ env.PYTHON_VERSION }}\x64\python3.exe"

    - name: Setup CMake
      uses: lukka/get-cmake@latest
      with:
        cmakeVersion: ${{ env.CMAKE_VERSION }}

    - name: Install Qt
      uses: jurplel/install-qt-action@v3
      with:
        version: ${{ env.QT_VERSION }}
        host: 'windows'
        target: 'desktop'
        arch: 'win64_msvc2019_64'
        modules: 'qtwebengine qtwebsockets qtmultimedia qtdeclarative'

    - name: Install Strawberry Perl
      run: |
        choco install strawberryperl -y

    - name: Setup MSYS2
      uses: msys2/setup-msys2@v2
      with:
        msystem: mingw64
        update: true
        install: >-
          mingw-w64-x86_64-autotools
          mingw-w64-x86_64-glew
          mingw-w64-x86_64-libarchive
          mingw-w64-x86_64-make
          mingw-w64-x86_64-meson
          mingw-w64-x86_64-toolchain
          autoconf
          automake
          bison
          flex
          git
          libtool
          nasm
          p7zip
          patch
          unzip
          zip

    - name: Setup Environment Variables
      shell: msys2 {0}
      run: |
        echo 'export PATH="/c/Program Files/CMake/bin:/c/hostedtoolcache/windows/Python/${{ env.PYTHON_VERSION }}/x64:/c/msys64/mingw64/bin:$PATH:/c/Strawberry/perl/bin"' >> ~/.bash_profile
        echo "export ACLOCAL_PATH=/c/msys64/usr/share/aclocal" >> ~/.bash_profile
        echo "export QT_HOME=${{ github.workspace }}/Qt/${{ env.QT_VERSION }}/msvc2019_64" >> ~/.bash_profile
        source ~/.bash_profile

    - name: Load OpenRV Aliases
      shell: msys2 {0}
      run: source rvcmds.sh

    - name: Install Python Dependencies
      shell: msys2 {0}
      run: rvsetup

    - name: Configure Project
      shell: msys2 {0}
      run: rvcfg

    - name: Build Dependencies
      shell: msys2 {0}
      run: rvbuildt dependencies

    - name: Build Main Executable
      shell: msys2 {0}
      run: rvbuildt main_executable

    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: openrv-windows
        path: _build/stage/bin/rv.exe